version: '3.8'

services:
  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: smtogo-minio
    ports:
      - '9000:9000' # MinIO API
      - '9001:9001' # MinIO Console
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - smtogo-network

  # SMTP API Application
  smtogo:
    build: .
    container_name: smtogo-api
    ports:
      - '8000:8000'
    environment:
      - GIN_MODE=release
    volumes:
      - ./smtp_config.jsonc:/app/smtp_config.jsonc:ro
      - ./data:/app/data
    depends_on:
      minio:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '--no-verbose',
          '--tries=1',
          '--spider',
          'http://localhost:8000/health',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - smtogo-network

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: smtogo-nginx
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      - smtogo
    restart: unless-stopped
    networks:
      - smtogo-network

volumes:
  minio_data:
    driver: local

networks:
  smtogo-network:
    driver: bridge
